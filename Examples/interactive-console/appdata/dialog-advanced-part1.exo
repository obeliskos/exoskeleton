/**
 * Dialog API Example - This demonstrates how your html/javascript
 * can create .net winforms dialogs and receive user input.
 *
 * This dialog api leverages and relies heavily on Json.NET's 
 * ability to deserialize control data which we pass as json 
 * objects for it to create.
 *
 * Finding syntax for encoding some of the custom .net datatypes
 * usually involves me serializing similar type in actual 
 * vs debugger, but the examples below should be good start.
 */

// Let's begin by (re)initializing our dialog singleton.
// This will ensure old dialog contents are cleared out
//   and new defaults are set.  
// Setting font at dialog initialization will default all 
//   controls to that font size.

exoskeleton.dialog.initialize("ExampleDialog", {
  Text: 'Exoskeleton Dialog Example', 
  Font: "Microsoft Sans Serif, 11pt", // json.net can parse this
  Width: 720, 
  Height: 400
});

// We will use top level panels to do docking and add our controls 
// to those.

// Render Middle (Fill) Panel first, no parent name supplied so
// this is a 'root' control added directly to dialog form controls.
exoskeleton.dialog.addPanel("ExampleDialog", {
  Dock: "Fill",
  Name: "MiddlePanel",
  BackColor: "192,192,192",	// let's use rgb values here
  Height: 20,
  Width: 20,
  Top: 100,
  Left: 10,
  Padding: "10, 10, 10, 10"
});

exoskeleton.dialog.addPanel("ExampleDialog", {
  Dock: "Fill",
  Name: "MiddleLeft",
}, "MiddlePanel");

exoskeleton.dialog.addPanel("ExampleDialog", {
  Dock: "Right",
  Name: "MiddleRight",
  Width: 360
}, "MiddlePanel");

// Add ListBox to middle panel first since it will fill to expand
exoskeleton.dialog.addListBox("ExampleDialog", {
    Name: "UserTypeList",
    Dock: "Fill",
	TabIndex: 1,
    Items: ['Guest', 'Normal', 'Administrator'],
    SelectedItem: 'Normal'  // let's default to one of our items
}, "MiddleLeft");

// add label to middle panel and dock it top (above 'fill' listbox)
exoskeleton.dialog.addLabel("ExampleDialog", {
  Dock: "Top",
  Name: "NameLabel",
  Text: "Select your user type :",
  Top: 0,
  Height: 26
}, "MiddleLeft");

exoskeleton.dialog.addCheckedListBox("ExampleDialog", {
  Dock: "Fill",
  Name: "CountryChecklist",
  CheckOnClick: true,
  Items: ["United States", "United Kingdom", "Germany", "France", "Australia", 
  	"Japan", "India", "Russia", "Other"]
}, [1, 4], "MiddleRight");

// add label to middle panel and dock it top (above 'fill' listbox)
exoskeleton.dialog.addLabel("ExampleDialog", {
  Dock: "Top",
  Name: "CountriesLabel",
  Text: "Select countries of residence :",
  Top: 0,
  Height: 26
}, "MiddleRight");

// Render Top Panel
exoskeleton.dialog.addPanel("ExampleDialog", {
  Dock: "Top",
  Name: "TopPanel",
  BackColor: "PaleGreen",	// .net named colors are also valid
  Height: 84,
  Padding: "10, 10, 10, 10" // 'Padding' left, top, right, bottom
});

exoskeleton.dialog.addLabel("ExampleDialog", {
  Name: "NameLabel",
  Text: "Enter your name :",
  Top: 8,
  Left: 7,
  Height: 20,
  Width: 140
}, "TopPanel");

exoskeleton.dialog.addTextBox("ExampleDialog", {
  Name: "NameTextBox",
  Text: "Some User",
  Top: 32,
  Left: 10,
  Height: 30,
  Width: 140,
  TabIndex: 0
}, "TopPanel");

exoskeleton.dialog.addCheckBox("ExampleDialog", {
  Name: "EmployeeCheckBox",
  Text: "Employee",
  Checked: true,
  Top: 58,
  Left: 10
}, "TopPanel");

exoskeleton.dialog.addRadioButton("ExampleDialog", {
  Name: "GenderMale",
  Text: "Male",
  Checked: false,
  Top: 57,
  Left: 165,
  AutoSize: true
}, "TopPanel");

exoskeleton.dialog.addRadioButton("ExampleDialog", {
  Name: "GenderFemale",
  Text: "Female",
  Checked: false,
  Top: 57,
  Left: 225,
  AutoSize: true
}, "TopPanel");

exoskeleton.dialog.addLabel("ExampleDialog", {
  Name: "AgeLabel",
  Text: "Enter your age:",
  AutoSize:true,
  Top: 10,
  Left: 170,
}, "TopPanel");

exoskeleton.dialog.addNumericUpDown("ExampleDialog", {
  Name: "AgeNumeric",
  Left: 170,
  Top: 30,
  Minimum: 13,
  Maximum: 120,
  Value: 21
}, "TopPanel");

exoskeleton.dialog.addLabel("ExampleDialog", {
  Name: "DateLabel",
  Text: "Pick some date :",
  AutoSize: true,
  Top: 10,
  Left: 310,
}, "TopPanel");

exoskeleton.dialog.addDateTimePicker("ExampleDialog", {
  Name: "StartDate",
  Top: 30,
  Left: 310,
  Width: 240,
  Value: "12/1/2014"
}, "TopPanel");

exoskeleton.dialog.addLabel("ExampleDialog", {
  Name: "DateLabel",
  Text: "Pick some value :",
  AutoSize: true,
  Top: 10,
  Left: 565,
}, "TopPanel");

exoskeleton.dialog.addComboBox("ExampleDialog", {
  Name: "TestComboBox",
  AutoSize:true,
  Top: 30,
  Left: 565,
  Items: ["one", "two", "three"]
}, "TopPanel");

// Render Bottom Panel
exoskeleton.dialog.addPanel("ExampleDialog", {
  Dock: "Bottom",
  Name: "BottomPanel",
  Height: 50,
  Padding: "10, 10, 10, 10"
});

exoskeleton.dialog.addDialogButton("ExampleDialog", {
  Name: 'OkButton',
  Top: 10,
  Left: 280,
  Height: 30,
  Width: 100,
  UseVisualStyleBackColor: true,
  TabIndex: 2,
  Text: "OK"
}, "OK", "BottomPanel");

exoskeleton.dialog.addDialogButton("ExampleDialog", {
  Name: 'CancelButton',
  Text: "Cancel",
  Top: 10,
  Left: 390,
  Height: 30,
  Width: 100,
  TabIndex: 3,
  UseVisualStyleBackColor: true
}, "Cancel", "BottomPanel");

// Now let's consider that we may want to do the above dialog multiple times with different 
// initialization data.  We can use the 'applyControlProperties' method to set properties on 
// controls already added.
exoskeleton.dialog.applyControlProperties("ExampleDialog", {
  NameTextBox : { Text: "TestUser" },
  EmployeeCheckBox : { Checked: false },
  AgeNumeric : { Value: 19 },
  GenderFemale: { Checked: true },
  UserTypeList: { SelectedItem: 'Administrator' },
  StartDate: { Value: '1/2/2017' },
  TestComboBox : { SelectedItem: 'three' },
  CountryChecklist: { 
    CheckedIndices: [0, 1, 2],
    BackColor: "LightBlue" 
  }
});

// We get a result with control contents no matter which
// DialogButton's DialogResult was clicked.
var result = exoskeleton.dialog.showDialog("ExampleDialog");

xo.logText("You clicked : " + result.Result);
xo.logText("Entire result object : ");
xo.logObject(result);