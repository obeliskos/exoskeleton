// Let's just reapply the exact same menu so you can see how the existing menu was coded.

// since we will re-add all events in this example
// without reloading the window, lets clear out all
// existing event handlers before re-applying them.
exoskeleton.events.clear();

exoskeleton.menu.initialize();
exoskeleton.menu.addMenu("&File");
exoskeleton.menu.addMenuItem("&File", "&New", "NewEvent", ["Control", "N"]);
exoskeleton.menu.addMenuItem("&File", "&Open...", "OpenEvent", ["Control", "Shift", "O"]);
exoskeleton.menu.addMenuItem("&File", "&Save", "SaveEvent", ["Control", "S"]);
exoskeleton.menu.addMenuItem("&File", "Save &as...", "SaveEvent");
exoskeleton.menu.addMenuItem("&File", "-");
exoskeleton.menu.addMenuItem("&File", "&Explore samples folder...", "ExploreSamplesEvent");
exoskeleton.menu.addMenuItem("&File", "-");
exoskeleton.menu.addMenuItem("&File", "&Run", "RunScriptEvent", ["Control", "R"]);
exoskeleton.menu.addMenuItem("&File", "-");
exoskeleton.menu.addMenuItem("&File", "E&xit", "ExitEvent");
exoskeleton.menu.addMenu("&Themes");
xo.themes.forEach(function (name) {
  exoskeleton.menu.addMenuItem("&Themes", name, "SetThemeEvent");
});
exoskeleton.menu.addMenu("&Help");
exoskeleton.menu.addMenuItem("&Help", "&View local Exoskeleton.js help docs", "LocalHelpEvent", ["F1"]);
exoskeleton.menu.addMenuItem("&Help", "Browse Exoskeleton &GitHub page", "ShowGithubEvent");
exoskeleton.menu.addMenuItem("&Help", "-");
exoskeleton.menu.addMenuItem("&Help", "&About", "AboutEvent", ["Control", "F1"]);

exoskeleton.events.on("NewEvent", xo.newHandler);
exoskeleton.events.on("OpenEvent", xo.openHandler);
exoskeleton.events.on("SaveEvent", xo.saveHandler);

exoskeleton.events.on("LocalHelpEvent", function () {
  exoskeleton.proc.start({
    FileName: "..\\exoskeleton.js\\docs\\index.html"
  });
});
exoskeleton.events.on("ShowGithubEvent", function () {
  exoskeleton.proc.start({
    FileName: "https://github.com/obeliskos/exoskeleton"
  });
});
exoskeleton.events.on("ExploreSamplesEvent", function () {
  var sampleDirectory = exoskeleton.file.combinePaths([
    xo.locations.Current,
    "appdata"
  ]);

  exoskeleton.proc.start({
    FileName: "explorer.exe",
    Arguments: sampleDirectory
  });
});

exoskeleton.events.on("ExitEvent", function () {
  exoskeleton.shutdown();
});

exoskeleton.events.on("AboutEvent", function () {
  var msg = "This application was written entirely using html/javascript + exoskeleton.  " +
      "It's dual purpose is to act not only as example itself, but an ide for loading existing example " +
      "exoskeleton.js scripts and creating your own new scripts.  You might then include them in a real " +
      "exoskeleton application, separate from this interactive console app.";

  exoskeleton.dialog.showMessageBox(msg, "About Exoskeleton Interactive Console", "OK", "Information");
});

exoskeleton.events.on("SetThemeEvent", function (menuText) {
  if (localStorage) {
    localStorage["xo.editorTheme"] = menuText;
  }

  xo.applyTheme(menuText);
});


// for this example, it removed our toolbar handlers, so we
// will just call out to our exoskeleton interactive console
// global javascript to rewire its handlers.
xo.initializeToolbar();

xo.logText("Menu was re-created.");